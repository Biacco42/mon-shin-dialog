(()=>{var __webpack_modules__={901:function(module,exports,__webpack_require__){eval('/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\n/*!\n * clipboard.js v2.0.11\n * https://clipboardjs.com/\n *\n * Licensed MIT Â© Zeno Rocha\n */\n!function (t, e) {\n  "object" == ( false ? 0 : _typeof(exports)) && "object" == ( false ? 0 : _typeof(module)) ? module.exports = e() :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (e),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : 0;\n}(this, function () {\n  return n = {\n    686: function _(t, e, n) {\n      "use strict";\n\n      n.d(e, {\n        "default": function _default() {\n          return b;\n        }\n      });\n      var e = n(279),\n          i = n.n(e),\n          e = n(370),\n          u = n.n(e),\n          e = n(817),\n          r = n.n(e);\n\n      function c(t) {\n        try {\n          return document.execCommand(t);\n        } catch (t) {\n          return;\n        }\n      }\n\n      var a = function a(t) {\n        t = r()(t);\n        return c("cut"), t;\n      };\n\n      function o(t, e) {\n        var n,\n            o,\n            t = (n = t, o = "rtl" === document.documentElement.getAttribute("dir"), (t = document.createElement("textarea")).style.fontSize = "12pt", t.style.border = "0", t.style.padding = "0", t.style.margin = "0", t.style.position = "absolute", t.style[o ? "right" : "left"] = "-9999px", o = window.pageYOffset || document.documentElement.scrollTop, t.style.top = "".concat(o, "px"), t.setAttribute("readonly", ""), t.value = n, t);\n        return e.container.appendChild(t), e = r()(t), c("copy"), t.remove(), e;\n      }\n\n      var f = function f(t) {\n        var e = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {\n          container: document.body\n        },\n            n = "";\n        return "string" == typeof t ? n = o(t, e) : t instanceof HTMLInputElement && !["text", "search", "url", "tel", "password"].includes(null == t ? void 0 : t.type) ? n = o(t.value, e) : (n = r()(t), c("copy")), n;\n      };\n\n      function l(t) {\n        return (l = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {\n          return _typeof(t);\n        } : function (t) {\n          return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);\n        })(t);\n      }\n\n      var s = function s() {\n        var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {},\n            e = t.action,\n            n = void 0 === e ? "copy" : e,\n            o = t.container,\n            e = t.target,\n            t = t.text;\n        if ("copy" !== n && "cut" !== n) throw new Error(\'Invalid "action" value, use either "copy" or "cut"\');\n\n        if (void 0 !== e) {\n          if (!e || "object" !== l(e) || 1 !== e.nodeType) throw new Error(\'Invalid "target" value, use a valid Element\');\n          if ("copy" === n && e.hasAttribute("disabled")) throw new Error(\'Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute\');\n          if ("cut" === n && (e.hasAttribute("readonly") || e.hasAttribute("disabled"))) throw new Error(\'Invalid "target" attribute. You can\\\'t cut text from elements with "readonly" or "disabled" attributes\');\n        }\n\n        return t ? f(t, {\n          container: o\n        }) : e ? "cut" === n ? a(e) : f(e, {\n          container: o\n        }) : void 0;\n      };\n\n      function p(t) {\n        return (p = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {\n          return _typeof(t);\n        } : function (t) {\n          return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);\n        })(t);\n      }\n\n      function d(t, e) {\n        for (var n = 0; n < e.length; n++) {\n          var o = e[n];\n          o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(t, o.key, o);\n        }\n      }\n\n      function y(t, e) {\n        return (y = Object.setPrototypeOf || function (t, e) {\n          return t.__proto__ = e, t;\n        })(t, e);\n      }\n\n      function h(n) {\n        var o = function () {\n          if ("undefined" == typeof Reflect || !Reflect.construct) return !1;\n          if (Reflect.construct.sham) return !1;\n          if ("function" == typeof Proxy) return !0;\n\n          try {\n            return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0;\n          } catch (t) {\n            return !1;\n          }\n        }();\n\n        return function () {\n          var t,\n              e = v(n);\n          return t = o ? (t = v(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), e = this, !(t = t) || "object" !== p(t) && "function" != typeof t ? function (t) {\n            if (void 0 !== t) return t;\n            throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");\n          }(e) : t;\n        };\n      }\n\n      function v(t) {\n        return (v = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {\n          return t.__proto__ || Object.getPrototypeOf(t);\n        })(t);\n      }\n\n      function m(t, e) {\n        t = "data-clipboard-".concat(t);\n        if (e.hasAttribute(t)) return e.getAttribute(t);\n      }\n\n      var b = function () {\n        !function (t, e) {\n          if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");\n          t.prototype = Object.create(e && e.prototype, {\n            constructor: {\n              value: t,\n              writable: !0,\n              configurable: !0\n            }\n          }), e && y(t, e);\n        }(r, i());\n        var t,\n            e,\n            n,\n            o = h(r);\n\n        function r(t, e) {\n          var n;\n          return function (t) {\n            if (!(t instanceof r)) throw new TypeError("Cannot call a class as a function");\n          }(this), (n = o.call(this)).resolveOptions(e), n.listenClick(t), n;\n        }\n\n        return t = r, n = [{\n          key: "copy",\n          value: function value(t) {\n            var e = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {\n              container: document.body\n            };\n            return f(t, e);\n          }\n        }, {\n          key: "cut",\n          value: function value(t) {\n            return a(t);\n          }\n        }, {\n          key: "isSupported",\n          value: function value() {\n            var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : ["copy", "cut"],\n                t = "string" == typeof t ? [t] : t,\n                e = !!document.queryCommandSupported;\n            return t.forEach(function (t) {\n              e = e && !!document.queryCommandSupported(t);\n            }), e;\n          }\n        }], (e = [{\n          key: "resolveOptions",\n          value: function value() {\n            var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {};\n            this.action = "function" == typeof t.action ? t.action : this.defaultAction, this.target = "function" == typeof t.target ? t.target : this.defaultTarget, this.text = "function" == typeof t.text ? t.text : this.defaultText, this.container = "object" === p(t.container) ? t.container : document.body;\n          }\n        }, {\n          key: "listenClick",\n          value: function value(t) {\n            var e = this;\n            this.listener = u()(t, "click", function (t) {\n              return e.onClick(t);\n            });\n          }\n        }, {\n          key: "onClick",\n          value: function value(t) {\n            var e = t.delegateTarget || t.currentTarget,\n                n = this.action(e) || "copy",\n                t = s({\n              action: n,\n              container: this.container,\n              target: this.target(e),\n              text: this.text(e)\n            });\n            this.emit(t ? "success" : "error", {\n              action: n,\n              text: t,\n              trigger: e,\n              clearSelection: function clearSelection() {\n                e && e.focus(), window.getSelection().removeAllRanges();\n              }\n            });\n          }\n        }, {\n          key: "defaultAction",\n          value: function value(t) {\n            return m("action", t);\n          }\n        }, {\n          key: "defaultTarget",\n          value: function value(t) {\n            t = m("target", t);\n            if (t) return document.querySelector(t);\n          }\n        }, {\n          key: "defaultText",\n          value: function value(t) {\n            return m("text", t);\n          }\n        }, {\n          key: "destroy",\n          value: function value() {\n            this.listener.destroy();\n          }\n        }]) && d(t.prototype, e), n && d(t, n), r;\n      }();\n    },\n    828: function _(t) {\n      var e;\n      "undefined" == typeof Element || Element.prototype.matches || ((e = Element.prototype).matches = e.matchesSelector || e.mozMatchesSelector || e.msMatchesSelector || e.oMatchesSelector || e.webkitMatchesSelector), t.exports = function (t, e) {\n        for (; t && 9 !== t.nodeType;) {\n          if ("function" == typeof t.matches && t.matches(e)) return t;\n          t = t.parentNode;\n        }\n      };\n    },\n    438: function _(t, e, n) {\n      var u = n(828);\n\n      function i(t, e, n, o, r) {\n        var i = function (e, n, t, o) {\n          return function (t) {\n            t.delegateTarget = u(t.target, n), t.delegateTarget && o.call(e, t);\n          };\n        }.apply(this, arguments);\n\n        return t.addEventListener(n, i, r), {\n          destroy: function destroy() {\n            t.removeEventListener(n, i, r);\n          }\n        };\n      }\n\n      t.exports = function (t, e, n, o, r) {\n        return "function" == typeof t.addEventListener ? i.apply(null, arguments) : "function" == typeof n ? i.bind(null, document).apply(null, arguments) : ("string" == typeof t && (t = document.querySelectorAll(t)), Array.prototype.map.call(t, function (t) {\n          return i(t, e, n, o, r);\n        }));\n      };\n    },\n    879: function _(t, n) {\n      n.node = function (t) {\n        return void 0 !== t && t instanceof HTMLElement && 1 === t.nodeType;\n      }, n.nodeList = function (t) {\n        var e = Object.prototype.toString.call(t);\n        return void 0 !== t && ("[object NodeList]" === e || "[object HTMLCollection]" === e) && "length" in t && (0 === t.length || n.node(t[0]));\n      }, n.string = function (t) {\n        return "string" == typeof t || t instanceof String;\n      }, n.fn = function (t) {\n        return "[object Function]" === Object.prototype.toString.call(t);\n      };\n    },\n    370: function _(t, e, n) {\n      var f = n(879),\n          l = n(438);\n\n      t.exports = function (t, e, n) {\n        if (!t && !e && !n) throw new Error("Missing required arguments");\n        if (!f.string(e)) throw new TypeError("Second argument must be a String");\n        if (!f.fn(n)) throw new TypeError("Third argument must be a Function");\n        if (f.node(t)) return c = e, a = n, (u = t).addEventListener(c, a), {\n          destroy: function destroy() {\n            u.removeEventListener(c, a);\n          }\n        };\n        if (f.nodeList(t)) return o = t, r = e, i = n, Array.prototype.forEach.call(o, function (t) {\n          t.addEventListener(r, i);\n        }), {\n          destroy: function destroy() {\n            Array.prototype.forEach.call(o, function (t) {\n              t.removeEventListener(r, i);\n            });\n          }\n        };\n        if (f.string(t)) return t = t, e = e, n = n, l(document.body, t, e, n);\n        throw new TypeError("First argument must be a String, HTMLElement, HTMLCollection, or NodeList");\n        var o, r, i, u, c, a;\n      };\n    },\n    817: function _(t) {\n      t.exports = function (t) {\n        var e,\n            n = "SELECT" === t.nodeName ? (t.focus(), t.value) : "INPUT" === t.nodeName || "TEXTAREA" === t.nodeName ? ((e = t.hasAttribute("readonly")) || t.setAttribute("readonly", ""), t.select(), t.setSelectionRange(0, t.value.length), e || t.removeAttribute("readonly"), t.value) : (t.hasAttribute("contenteditable") && t.focus(), n = window.getSelection(), (e = document.createRange()).selectNodeContents(t), n.removeAllRanges(), n.addRange(e), n.toString());\n        return n;\n      };\n    },\n    279: function _(t) {\n      function e() {}\n\n      e.prototype = {\n        on: function on(t, e, n) {\n          var o = this.e || (this.e = {});\n          return (o[t] || (o[t] = [])).push({\n            fn: e,\n            ctx: n\n          }), this;\n        },\n        once: function once(t, e, n) {\n          var o = this;\n\n          function r() {\n            o.off(t, r), e.apply(n, arguments);\n          }\n\n          return r._ = e, this.on(t, r, n);\n        },\n        emit: function emit(t) {\n          for (var e = [].slice.call(arguments, 1), n = ((this.e || (this.e = {}))[t] || []).slice(), o = 0, r = n.length; o < r; o++) {\n            n[o].fn.apply(n[o].ctx, e);\n          }\n\n          return this;\n        },\n        off: function off(t, e) {\n          var n = this.e || (this.e = {}),\n              o = n[t],\n              r = [];\n          if (o && e) for (var i = 0, u = o.length; i < u; i++) {\n            o[i].fn !== e && o[i].fn._ !== e && r.push(o[i]);\n          }\n          return r.length ? n[t] = r : delete n[t], this;\n        }\n      }, t.exports = e, t.exports.TinyEmitter = e;\n    }\n  }, r = {}, o.n = function (t) {\n    var e = t && t.__esModule ? function () {\n      return t["default"];\n    } : function () {\n      return t;\n    };\n    return o.d(e, {\n      a: e\n    }), e;\n  }, o.d = function (t, e) {\n    for (var n in e) {\n      o.o(e, n) && !o.o(t, n) && Object.defineProperty(t, n, {\n        enumerable: !0,\n        get: e[n]\n      });\n    }\n  }, o.o = function (t, e) {\n    return Object.prototype.hasOwnProperty.call(t, e);\n  }, o(686)["default"];\n\n  function o(t) {\n    if (r[t]) return r[t].exports;\n    var e = r[t] = {\n      exports: {}\n    };\n    return n[t](e, e.exports, o), e.exports;\n  }\n\n  var n, r;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///901\n')},466:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"c4\": () => (/* binding */ generatePostText),\n  \"V1\": () => (/* binding */ linkNameToQuestionaire),\n  \"KO\": () => (/* binding */ linkProblemAndTextbox),\n  \"ve\": () => (/* binding */ setupClipboardJS)\n});\n\n// UNUSED EXPORTS: generateKeyboardList, splitKeyboardLinked\n\n;// CONCATENATED MODULE: ./src/js/nameToQuestionaireJP.js\n//------------------------------------------------------------------------------------------\n// å DOM ã® Name å±æ§ã¨æç¨¿æã§ä½¿ãè³ªåã®é¢é£ä»ã\n//-----------------------------------------------------------------------------------------\nvar nameToQuestionaireJP = new Map([// buildProblem.html\n['noInputTextarea', 'å¥åã§ããªãã­ã¼ããã'], ['notExpectTextarea', 'è¨­å®ã¨ç°ãªãå¥åã¨ãªãã­ã¼ããã'], ['replaceConnectSide', 'å·¦å³ã©ã¡ãå´ãç¹ãã§ãçç¶ã¯åãã§ãã'], ['connectOnlyOneHand', 'å·¦å´ï¼å³å´ï¼ã ãæ¥ç¶ããå ´åãå·¦å´ï¼å³å´ï¼ã®ã­ã¼ãã¼ãã¨ãã¦é©åã«åä½ãã¾ãã'], ['ledOffTextarea', 'ç¹ç¯ããªã LED ããã'], ['otherProblemTextarea', 'ä¸è¨ä»¥å¤ã®åé¡ï¼ã©ã³ããå¥ããã etcï¼ãèµ·ãã¦ãã'], ['trackballDeviceProblemTextarea', 'ãã©ãã¯ãã¼ã«ãã­ã¼ã¿ãªã¼ã¨ã³ã³ã¼ãã¼ã®åé¡'], ['keyboardName', 'ã­ã¼ãã¼ãå'], ['buildGuideURL', 'ãã«ãã¬ã¤ãã®URL'], ['kicadFileURL', 'KiCadãã¡ã¤ã«ã®URL'], // _microcomputerInfo.html\n['microcontroller', 'ãã¤ã³ã³ã®ç¨®é¡'], ['microcontrollerName', 'ãã¤ã³ã³å'], // _firmwareInfo.html\n['firmware', 'ãã¡ã¼ã ã¦ã§ã¢ã®ç¨®é¡'], ['firmwareName', 'ãã¡ã¼ã ã¦ã§ã¢å'], ['writingTool', 'æ¸ãè¾¼ã¿æ¹æ³'], ['writingToolName', 'ãã®ä»ã®æ¸ãè¾¼ã¿æ¹æ³'], // _otherInfo.html\n['detailWork', 'ããã¾ã§ã«è¡ã£ãä½æ¥­ã®åå®¹'], ['informationReferredTo', 'åèã«ããæå ±ï¼ãã«ãã¬ã¤ãé¤ãï¼'], ['testMicrocomputerOnly', 'ãã¤ã³ã³ãã¼ãã ãã PC ã«æ¥ç¶ãããã­ã¼ãã¼ãã¨ãã¦èªè­ããã¾ããï¼'], ['haveTester', 'ãã¹ã¿ã¼ãæã£ã¦ãã¾ããï¼'], // firmwareProblem.html\n['firmwareProblem', 'ãã¡ã¼ã ã¦ã§ã¢ã®ãã©ãã«ã®åå®¹'], ['osName', 'OS å'], ['osVerAndDirtriInput', 'OS ã®ãã¼ã¸ã§ã³ or ãã£ã¹ããªãã¥ã¼ã·ã§ã³']]);\n\n;// CONCATENATED MODULE: ./src/js/nameToQuestionaireEN.js\n//------------------------------------------------------------------------------------------\n// å DOM ã® Name å±æ§ã¨æç¨¿æã§ä½¿ãè³ªåã®é¢é£ä»ã\n//-----------------------------------------------------------------------------------------\nvar nameToQuestionaireEN = new Map([[\"keyboardName\", \"Keyboard Name\"], [\"buildGuideURL\", \"Official build guide URL\"], [\"kicadFileURL\", \"Kicad file URL\"], [\"microcontroller\", \"Microcomputer Name\"], [\"microcontrollerName\", \"Microcontroller Name\"], [\"connection\", \"Connection method for keyboard and PC\"], [\"keyboardForm\", \"Is your keyboard a split type?\"], [\"socket\", \"Do you use Socket?\"], [\"wiring\", \"Wiring method.\"], [\"osName\", \"OS\"], [\"windowsVersionInput\", \"Windows Version\"], [\"windowsWSL2\", \"Do you use 'WSL2' for firmware building?\"], [\"windowsTerminalSoftInput\", \"Terminal App (Windows)\"], [\"macosVersionInput\", \"MacOS Version\"], [\"linuxDistributionInput\", \"Linux Disribution\"], [\"dockerCheckbox\", \"Do you use 'Docker' for firmware building?\"], [\"keyboardLayout\", \"Keyboard Layout Setting (OS Side)\"], [\"keyInputProblem\", \"Problems with keyboard input.\"], [\"noInputTextarea\", \"Description of not react key.\"], [\"notExpectTextarea\", \"Description of diffrent action key from settings\"], [\"notActionOneHandTextarea\", \"Which you connected either left side or right side keyboard? Which of either left side or right side keyboard isn't reacted?\"], [\"pointerDeviceProblemTextarea\", \"Problem of Pointing Device.\"], [\"writeErrorQmk\", \"Can't write firmware\"], [\"writingToolLog\", \"Firmware writing tool log.\"], [\"buildErrorQmk\", \"Can't build firmware\"], [\"buildLog\", \"Firmware build log.\"], [\"environmentErrorQmk\", \"Can't set up firmware building environment.\"], [\"environmentLog\", \"Firmware building environment log.\"], [\"ledOffTextarea\", \"Place that not light up LED.\"], [\"otherProblemTextarea\", \"Description of other Problem.\"], [\"whenProblemOccur\", \"When does problem occur?\"], [\"detail\", \"Description of work so far.\"], [\"informationReferredTo\", \"Referenced information (excluding build guide).\"], [\"writingTool\", \"Firmware Writting Tool\"], [\"testProMicroOnly\", \"Conthrough, detach microcontroller board from PCB. Next, if microcontroller board only connect to PC by USB, board was recognized keyboard by OS?\"], [\"haveTester\", \"Do you have tester?\"]]);\n\n// EXTERNAL MODULE: ./node_modules/clipboard/dist/clipboard.min.js\nvar clipboard_min = __webpack_require__(901);\n;// CONCATENATED MODULE: ./src/js/common.js\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n //------------------------------------------------------------------------------------------\n// DOM ã® Name å±æ§ã¨æç¨¿æã«ä½¿ãè³ªåæãçµã³ã¤ãã Map ãè¿ã\n//-----------------------------------------------------------------------------------------\n\nfunction linkNameToQuestionaire() {\n  var nameToQuestionaire = new Map();\n\n  if (document.documentElement.lang == 'ja') {\n    nameToQuestionaireJP.forEach(function (value, key) {\n      nameToQuestionaire.set(key, value);\n    });\n  } else if (document.documentElement.lang == 'en') {\n    nameToQuestionaireEN.forEach(function (value, key) {\n      nameToQuestionaire.set(key, value);\n    });\n  }\n\n  return nameToQuestionaire;\n} //------------------------------------------------------------------------------------------\n// ã©ã¸ãªããã¯ã¹ã®é¸æã«åããã¦ãã­ã¹ãã¨ãªã¢ãªã©ã®ä½¿ç¨å¯å¦ãåãæ¿ãã\n//-----------------------------------------------------------------------------------------\n\nfunction linkProblemAndTextbox(e) {\n  switch (e.target.id) {\n    case 'noInput':\n    case 'notExpect':\n    case 'ledOff':\n    case 'trackballDeviceProblem':\n    case 'otherProblem':\n      // ååé¡ã® checkbox ã® data-relation-textarea ã«ã¯ãé¢ä¿ãã textarea ã® ID ãæ ¼ç´ãã¦ããã\n      document.getElementById(e.target.dataset.relationTextarea).disabled = !e.target.checked;\n      break;\n\n    default:\n      break;\n  }\n\n  if (e.target.name === 'microcontroller') {\n    if (e.target.id === 'othersMicrocontroller') {\n      document.getElementById('microcontrollerNameInput').disabled = false;\n    } else {\n      document.getElementById('microcontrollerNameInput').disabled = true;\n    }\n  }\n\n  if (e.target.name === 'firmware') {\n    if (e.target.id === 'otherFirmware') {\n      document.getElementById('otherFirmwareInput').disabled = false;\n    } else {\n      document.getElementById('otherFirmwareInput').disabled = true;\n    }\n  }\n\n  if (e.target.name === 'writingTool') {\n    if (e.target.id === 'otherMethod') {\n      document.getElementById('otherMethodInput').disabled = false;\n    } else {\n      document.getElementById('otherMethodInput').disabled = true;\n    }\n  }\n} //------------------------------------------------------------------------------------------\n// ãã©ã¼ã ã«å¥åããããã¼ã¿ããæç¨¿æãçæãã\n//-----------------------------------------------------------------------------------------\n\nfunction generatePostText(nameToQuestionaire) {\n  var form = document.getElementById(\"questionForm\");\n  var form_data = new FormData(form);\n  var postsText = document.getElementById(\"postsText\");\n  var ex = /\\n\\n$/gi;\n  var userText = '';\n  postsText.value = '';\n\n  var _iterator = _createForOfIteratorHelper(form_data.keys()),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var key = _step.value;\n\n      if (nameToQuestionaire.has(key)) {\n        if (key === 'replaceConnectSide') {\n          userText = '__**å·¦å³åé¢åã§çæ¹ã ãåå¿ããªã**__\\n';\n          postsText.value += userText;\n          userText = '__**' + nameToQuestionaire.get(key) + '**__\\n' + form_data.get(key);\n          postsText.value += userText + \"\\n\\n\";\n        } else {\n          userText = '__**' + nameToQuestionaire.get(key) + '**__\\n' + form_data.get(key);\n          postsText.value += userText + \"\\n\\n\";\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  postsText.value = postsText.value.replace(ex, '');\n  fixedTextBoxHeight(postsText);\n  checkDiscordLimit(postsText);\n} //------------------------------------------------------------------------------------------\n// æç¨¿æã®è¡æ°ã«åããã¦ãã­ã¹ãããã¯ã¹ã®é«ããèª¿æ´\n//------------------------------------------------------------------------------------------\n\nfunction fixedTextBoxHeight(postsText) {\n  if (postsText.scrollHeight > postsText.clientHeight) {\n    postsText.style.height = postsText.scrollHeight + \"px\";\n  }\n} //------------------------------------------------------------------------------------------\n// Discord ã®æç¨¿æ¬ã®å¶éï¼æå­æ°ï¼è¡æ°ã2002ã«ãªãã¨è²¼ä»ãä¸å¯ï¼å¯¾ç­\n//-----------------------------------------------------------------------------------------\n\n\nfunction checkDiscordLimit(postsText) {\n  var character = postsText.value.length;\n  var lineBreak = (postsText.value.match(/\\n/g) || []).length;\n  var alertTextDiscord = document.getElementById('alertTextDiscord');\n  var announceLabel = document.getElementById('announceLabel');\n  var replace = document.getElementById('replaceDom');\n  var copyBtn = document.getElementById('copyBtn');\n  document.getElementById('characterAndLines').innerText = character + lineBreak;\n\n  if (character + lineBreak > 2001) {\n    if (!(alertTextDiscord === null)) {\n      return;\n    } else {\n      var label = document.createElement('label');\n      label.classList.add('mt-1', 'mb-3', 'p-1', 'alert', 'alert-warning', 'rounded');\n      var strong = document.createElement('strong'); //   span.classList.add('rounded');\n\n      if (document.documentElement.lang == 'ja') {\n        strong.textContent = 'Discord ã®æç¨¿æ¬ã®å¶éã¯ãæå­æ°ï¼è¡æ° â¦ 2001ãã§ãã';\n      } else if (document.documentElement.lang == 'en') {\n        strong.textContent = 'Limitation of Discord is \"character + line â¦ 2001\".';\n      }\n\n      label.id = 'alertTextDiscord';\n      label.appendChild(strong);\n      replace.appendChild(label);\n      copyBtn.disabled = true;\n      copyBtn.classList.remove('btn-primary');\n      copyBtn.classList.add('btn-secondary');\n    }\n\n    announceLabel.style.textDecoration = 'line-through';\n  } else {\n    if (!(alertTextDiscord === null)) {\n      replace.removeChild(alertTextDiscord);\n    }\n\n    announceLabel.style.textDecoration = 'none';\n    copyBtn.disabled = false;\n    copyBtn.classList.remove('btn-secondary');\n    copyBtn.classList.add('btn-primary');\n  }\n} //------------------------------------------------------------------------------------------\n// ã­ã¼ãã¼ãåå¥åããã¯ã¹ã®ãªã¼ãã³ã³ããªã¼ãç¨ã®ãã¼ã¿ç»é²\n//-----------------------------------------------------------------------------------------\n\n\nfunction generateKeyboardList() {\n  console.time('generateKeyboardList()');\n  var domKeyboardList = document.getElementById(\"keyboardList\");\n  fetch('https://api.qmk.fm/v1/keyboards').then(function (response) {\n    if (!response.ok) {\n      throw new Error('Response not success.');\n    }\n\n    return response.text();\n  }).then(function (data) {\n    var keyboardList = data.split(',');\n    return keyboardList;\n  }).then(function (keyboardList) {\n    var _iterator2 = _createForOfIteratorHelper(keyboardList),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var keyboard = _step2.value;\n        var option = document.createElement('option');\n        option.value = keyboard.replace(/\\\"/g, '');\n        domKeyboardList.appendChild(option);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    ;\n    console.info('Keyboard list generated.');\n  })[\"catch\"](function (error) {\n    return console.error('There has been a problem with your fetch operation:', error);\n  });\n  console.timeEnd('generateKeyboardList()');\n} //------------------------------------------------------------------------------------------\n// å·¦å³åå²åã®ã­ã¼ãã¼ãã®æã ããå·¦å³åé¢åã®è³ªåãåç­å¯è½ã«ããã\n// target.checked = false ã«ãªãã®ã¯ãä¸åº¦ãã§ãã¯ãã¦ããè§£é¤ããæã ãã\n//-----------------------------------------------------------------------------------------\n\nfunction splitKeyboardLinked(e) {\n  var replaceConnectSideYes = document.getElementById(\"replaceConnectSideYes\");\n  var replaceConnectSideNo = document.getElementById(\"replaceConnectSideNo\");\n  var connectOneHandOK = document.getElementById(\"connectOneHandOK\");\n  var connectOneHandNG = document.getElementById(\"connectOneHandNG\");\n\n  if (e.target.id == \"notActionOneHand\") {\n    if (e.target.checked) {\n      replaceConnectSideYes.disabled = false;\n      replaceConnectSideNo.disabled = false;\n      connectOneHandOK.disabled = false;\n      connectOneHandNG.disabled = false;\n    } else {\n      replaceConnectSideYes.disabled = true;\n      replaceConnectSideNo.disabled = true;\n      connectOneHandOK.disabled = true;\n      connectOneHandNG.disabled = true;\n    }\n  }\n} //------------------------------------------------------------------------------------------\n// clipboard.js\n//-----------------------------------------------------------------------------------------\n\nfunction setupClipboardJS() {\n  // Clipboard\n  var clipboard = new clipboard_min('#copyBtn');\n  var copyResult = document.getElementById('copyResult');\n  clipboard.on('success', function (e) {\n    copyResult.classList.remove('fadeout');\n    copyResult.classList.add('fadein');\n    copyResult.innerText = 'Copied!';\n    setTimeout(function () {\n      copyResult.classList.remove('fadein');\n      copyResult.classList.add('fadeout');\n    }, 2000);\n  });\n  clipboard.on('error', function (e) {\n    copyResult.classList.remove('fadeout');\n    copyResult.classList.add('fadein');\n    copyResult.innerText = 'Failed!';\n    setTimeout(function () {\n      copyResult.classList.remove('fadein');\n      copyResult.classList.add('fadeout');\n    }, 2000);\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///466\n")},129:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(466);\n //------------------------------------------------------------------------------------------\n// åæåå¦ç\n//------------------------------------------------------------------------------------------\n\n(function () {\n  //------------------------------------------------------------------------------------------\n  // æç¨¿æãã©ã¼ã ã®åå¦ç\n  //-----------------------------------------------------------------------------------------\n  var nameToQuestionaire = _common_js__WEBPACK_IMPORTED_MODULE_0__/* .linkNameToQuestionaire */ .V1();\n  _common_js__WEBPACK_IMPORTED_MODULE_0__/* .setupClipboardJS */ .ve(); //------------------------------------------------------------------------------------------\n  // "change" ã¤ãã³ãã«æç¨¿æããªã¢ã«ã¿ã¤ã ã§ä½æããå¦çãªã©ãå²ãå½ã¦\n  //-----------------------------------------------------------------------------------------\n\n  document.getElementById("questionForm").addEventListener("change", function (e) {\n    //------------------------------------------------------------------------------------------\n    // å¥ååå®¹ã«å¿ãã¦ã©ã¸ãªããã¯ã¹ãªã©ã®ä½¿ç¨å¯å¦ãåãæ¿ãã\n    //-----------------------------------------------------------------------------------------\n    _common_js__WEBPACK_IMPORTED_MODULE_0__/* .linkProblemAndTextbox */ .KO(e); //------------------------------------------------------------------------------------------\n    // æç¨¿æãä½æ\n    //-----------------------------------------------------------------------------------------\n\n    _common_js__WEBPACK_IMPORTED_MODULE_0__/* .generatePostText */ .c4(nameToQuestionaire);\n  });\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTI5LmpzIiwibWFwcGluZ3MiOiI7Q0FFQTtBQUNBO0FBQ0E7O0FBQ0EsQ0FBQyxZQUFNO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsTUFBTUMsa0JBQWtCLEdBQUdELHdFQUFBLEVBQTNCO0FBQ0FBLEVBQUFBLGtFQUFBLEdBTEssQ0FPTDtBQUNBO0FBQ0E7O0FBQ0FJLEVBQUFBLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixjQUF4QixFQUF3Q0MsZ0JBQXhDLENBQXlELFFBQXpELEVBQW1FLFVBQUNDLENBQUQsRUFBTztBQUV4RTtBQUNBO0FBQ0E7QUFDQVAsSUFBQUEsdUVBQUEsQ0FBNkJPLENBQTdCLEVBTHdFLENBT3hFO0FBQ0E7QUFDQTs7QUFDQVAsSUFBQUEsa0VBQUEsQ0FBd0JDLGtCQUF4QjtBQUVELEdBWkQ7QUFhRCxDQXZCRCIsInNvdXJjZXMiOlsid2VicGFjazovL2RvY3MvLi9zcmMvanMvZmlybXdhcmVQcm9ibGVtLmpzP2I0NzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgY29tbW9uIGZyb20gJy4vY29tbW9uLmpzJztcclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIOWIneacn+WMluWHpueQhlxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4oKCkgPT4ge1xyXG4gIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgLy8g5oqV56i/5paH44OV44Kp44O844Og44Gu5YmN5Yem55CGXHJcbiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIGNvbnN0IG5hbWVUb1F1ZXN0aW9uYWlyZSA9IGNvbW1vbi5saW5rTmFtZVRvUXVlc3Rpb25haXJlKCk7XHJcbiAgY29tbW9uLnNldHVwQ2xpcGJvYXJkSlMoKTtcclxuXHJcbiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAvLyBcImNoYW5nZVwiIOOCpOODmeODs+ODiOOBq+aKleeov+aWh+OCkuODquOCouODq+OCv+OCpOODoOOBp+S9nOaIkOOBmeOCi+WHpueQhuOBquOBqeOCkuWJsuOCiuW9k+OBplxyXG4gIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInF1ZXN0aW9uRm9ybVwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsIChlKSA9PiB7XHJcblxyXG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgIC8vIOWFpeWKm+WGheWuueOBq+W/nOOBmOOBpuODqeOCuOOCquODnOODg+OCr+OCueOBquOBqeOBruS9v+eUqOWPr+WQpuOCkuWIh+OCiuabv+OBiOOCi1xyXG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgY29tbW9uLmxpbmtQcm9ibGVtQW5kVGV4dGJveChlKTtcclxuXHJcbiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgLy8g5oqV56i/5paH44KS5L2c5oiQXHJcbiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICBjb21tb24uZ2VuZXJhdGVQb3N0VGV4dChuYW1lVG9RdWVzdGlvbmFpcmUpO1xyXG5cclxuICB9KTtcclxufSkoKTsiXSwibmFtZXMiOlsiY29tbW9uIiwibmFtZVRvUXVlc3Rpb25haXJlIiwibGlua05hbWVUb1F1ZXN0aW9uYWlyZSIsInNldHVwQ2xpcGJvYXJkSlMiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJsaW5rUHJvYmxlbUFuZFRleHRib3giLCJnZW5lcmF0ZVBvc3RUZXh0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///129\n')}},__webpack_module_cache__={};function __webpack_require__(Q){var F=__webpack_module_cache__[Q];if(void 0!==F)return F.exports;var B=__webpack_module_cache__[Q]={id:Q,loaded:!1,exports:{}};return __webpack_modules__[Q].call(B.exports,B,B.exports,__webpack_require__),B.loaded=!0,B.exports}__webpack_require__.d=(Q,F)=>{for(var B in F)__webpack_require__.o(F,B)&&!__webpack_require__.o(Q,B)&&Object.defineProperty(Q,B,{enumerable:!0,get:F[B]})},__webpack_require__.o=(Q,F)=>Object.prototype.hasOwnProperty.call(Q,F),__webpack_require__.nmd=Q=>(Q.paths=[],Q.children||(Q.children=[]),Q);var __webpack_exports__=__webpack_require__(129)})();